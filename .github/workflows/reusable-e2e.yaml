name: Reusable e2e workflow

on:
  workflow_call:
    inputs:
      operator:
        required: true
        type: boolean

      ref:
        required: true
        type: string

jobs:

  build_mirrord:
    runs-on: ubuntu-latest
    name: build mirrord      
    steps:
      - name: checkout
        if: ${{ !inputs.operator }}
        uses: actions/checkout@v3
        with: 
          ref: ${{ inputs.ref }}
      - name: checkout for operator
        if: ${{ inputs.operator }}
        uses: actions/checkout@v3
        with: 
          ref: '3.48.0'          
      - uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - run: cargo build --manifest-path=./Cargo.toml
      - name: upload layer
        uses: actions/upload-artifact@v3
        with:
          name: mirrord-artifacts-x
          path: |
            target/debug/libmirrord_layer.so
            target/debug/mirrord
          if-no-files-found: error


  mirrord_e2e:    
    if: ${{ !inputs.operator }}
    needs: build_mirrord
    runs-on: ubuntu-latest
    name: e2e
    env:
      MIRRORD_AGENT_RUST_LOG: "warn,mirrord=debug"
    steps:      
      - name: download mirrord
        uses: actions/download-artifact@v3
        with:
          name: mirrord-artifacts-x
          path: target/debug/
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - run: npm install express
      - uses: actions/setup-python@v3
      - run: pip3 install flask
      - run: pip3 install fastapi
      - run: pip3 install uvicorn[standard]
      - run: sudo apt-get update && sudo apt-get install -y curl
      - uses: actions/setup-go@v3
        with:
          go-version: "1.18.0"
      - run: |
          go version
      - run: | # Build Go test apps.
          ./scripts/build_go_apps.sh 18
      - uses: actions/setup-go@v3
        with:
          go-version: "1.19.0"
      - run: |
          go version
      - run: | # Build Go test apps.
          ./scripts/build_go_apps.sh 19
      - uses: actions/setup-go@v3
        with:
          go-version: "1.20.0-rc.3"
      - run: |
          go version
      - run: | # Build Go test apps.
          ./scripts/build_go_apps.sh 20
      - run: |
          cd tests/rust-e2e-fileops
          cargo build
      - run: |
          cd tests/rust-unix-socket-client
          cargo build
      - run: |
          cd tests/rust-bypassed-unix-socket
          cargo build
      - name: download image
        uses: actions/download-artifact@v3
        with:
          name: test
          path: /tmp
      - name: start minikube
        uses: medyagh/setup-minikube@master
        with:
          container-runtime: ${{matrix.container-runtime}}
      - run: minikube image load /tmp/test.tar
      # By running the test of the targetless agent first, we prove it works on an empty cluster without any pods.
      - name: Run targetless E2E test.
        run: cargo test -p tests targetless
      - name: Run all E2E test
        run: cargo test -p tests -- --test-threads=6
      - name: Collect logs
        if: ${{ failure() }}
        run: |
          kubectl describe pods
          docker exec minikube find /var/log/pods -print -exec cat {} \;
