name: Reusable e2e workflow

on:
  workflow_call:
    inputs:
      operator:
        required: true
        type: boolean

jobs:
  # operator_e2e:
  #   if: ${{ inputs.operator }} == "true"
  #   runs-on: ubuntu-latest
  #   name: e2e
  #   needs: [build_operator_image, build_agent_image]
  #   env:
  #     MIRRORD_AGENT_RUST_LOG: "warn,mirrord=debug"
  #     MIRRORD_OPERATOR_IMAGE: "test"
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         repository: "infiniteregrets/mirrord"
  #         ref: "reusable-workflow"
  #     - uses: .github/workflows/reusable-e2e.yaml
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: nightly-2023-04-19
  #         components: rustfmt, clippy
  #     - uses: arduino/setup-protoc@v1
  #       with:
  #         repo-token: ${{ secrets.GITHUB_TOKEN }}
  #     - name: build mirrord
  #       run: cargo build --manifest-path=./Cargo.toml
  #     - name: download operator image
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: test-operator
  #         path: /tmp
  #     - name: start minikube
  #       uses: medyagh/setup-minikube@master
  #       with:
  #         container-runtime: containerd
  #     - run: minikube image load /tmp/test-operator.tar
  #     - run: minikube image list
  #     - name: setup operator
  #       run: |
  #         target/debug/mirrord operator setup --accept-tos --license-path ./tests/test-license.pem | kubectl apply -f -              
  #         kubectl get pods
  #     - name: wait for operator status
  #       run: |
  #         end_time=$((SECONDS+60))
  #         log_file="error.log"
  #         rm -f "$log_file"

  #         while [ $SECONDS -lt $end_time ]; do
  #           if target/debug/mirrord operator status 2>> "$log_file"; then              
  #             break
  #           fi
  #           kubectl describe pods -n mirrord
  #           sleep 1
  #         done

  #         if [ $SECONDS -ge $end_time ]; then
  #           echo "Timed out!, error messages:"            
  #           cat "$log_file"            
  #         fi

  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 14
  #     - run: npm install express
  #     - uses: actions/setup-python@v3
  #     - run: pip3 install flask
  #     - run: pip3 install fastapi
  #     - run: pip3 install uvicorn[standard]
  #     - run: sudo apt-get update && sudo apt-get install -y curl
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: "1.18.0"
  #     - run: |
  #         go version
  #     - run: | # Build Go test apps.
  #         ./scripts/build_go_apps.sh 18
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: "1.19.0"
  #     - run: |
  #         go version
  #     - run: | # Build Go test apps.
  #         ./scripts/build_go_apps.sh 19
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: "1.20.0-rc.3"
  #     - run: |
  #         go version
  #     - run: | # Build Go test apps.
  #         ./scripts/build_go_apps.sh 20
  #     - run: |
  #         cd tests/rust-e2e-fileops
  #         cargo build
  #     - run: |
  #         cd tests/rust-unix-socket-client
  #         cargo build
  #     - run: |
  #         cd tests/rust-bypassed-unix-socket
  #         cargo build
  #     - name: download agent image
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: test
  #         path: /tmp
  #     - run: minikube image load /tmp/test.tar
  #     # By running the test of the targetless agent first, we prove it works on an empty cluster without any pods.
  #     - name: Run targetless E2E test.
  #       run: cargo test -p tests targetless
  #     - name: Run all E2E test
  #       run: cargo test -p tests -- --test-threads=6
  #     - name: Collect logs
  #       if: ${{ failure() }}
  #       run: |
  #         kubectl describe pods
  #         docker exec minikube find /var/log/pods -print -exec cat {} \;

  mirrord_e2e:
    runs-on: ubuntu-latest    
    name: e2e    
    # if: ${{needs.changed_files.outputs.rs_changed == 'true' || needs.changed_files.outputs.ci_changed == 'true'}}
    env:
      MIRRORD_AGENT_RUST_LOG: "warn,mirrord=debug"
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - run: npm install express
      - uses: actions/setup-python@v3
      - run: pip3 install flask
      - run: pip3 install fastapi
      - run: pip3 install uvicorn[standard]
      - run: sudo apt-get update && sudo apt-get install -y curl
      - uses: actions/setup-go@v3
        with:
          go-version: "1.18.0"
      - run: |
          go version
      - run: | # Build Go test apps.
          ./scripts/build_go_apps.sh 18
      - uses: actions/setup-go@v3
        with:
          go-version: "1.19.0"
      - run: |
          go version
      - run: | # Build Go test apps.
          ./scripts/build_go_apps.sh 19
      - uses: actions/setup-go@v3
        with:
          go-version: "1.20.0-rc.3"
      - run: |
          go version
      - run: | # Build Go test apps.
          ./scripts/build_go_apps.sh 20
      - run: |
          cd tests/rust-e2e-fileops
          cargo build
      - run: |
          cd tests/rust-unix-socket-client
          cargo build
      - run: |
          cd tests/rust-bypassed-unix-socket
          cargo build
      - name: download image
        uses: actions/download-artifact@v3
        with:
          name: test
          path: /tmp
      - name: start minikube
        uses: medyagh/setup-minikube@master
        with:
          container-runtime: ${{matrix.container-runtime}}
      - run: minikube image load /tmp/test.tar
      # By running the test of the targetless agent first, we prove it works on an empty cluster without any pods.
      - name: Run targetless E2E test.
        run: cargo test -p tests targetless
      - name: Run all E2E test
        run: cargo test -p tests -- --test-threads=6
      - name: Collect logs
        if: ${{ failure() }}
        run: |
          kubectl describe pods
          docker exec minikube find /var/log/pods -print -exec cat {} \;
